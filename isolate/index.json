{
  "path": "/",
  "dirs": [
    {
      "path": "/00-callstack",
      "files": [
        {
          "path": "/readme.js"
        },
        {
          "path": "/1-the-callstack.js"
        },
        {
          "path": "/2-callstack-error-messages.js"
        },
        {
          "path": "/3-console-trace.js"
        },
        {
          "path": "/4-functions-as-arguments.js"
        },
        {
          "path": "/5-callbacks.js"
        },
        {
          "path": "/6-in-a-loop.js"
        }
      ],
      "config": {
        "buttons": [
          {
            "console": true
          },
          {
            "debugger": true
          },
          {
            "jsTutor": true
          }
        ]
      }
    },
    {
      "path": "/00-closure",
      "dirs": [
        {
          "path": "/1-identifying-closure-examples",
          "files": [
            {
              "path": "/1-returning-functions.js"
            },
            {
              "path": "/2-never-creates-closure.js"
            },
            {
              "path": "/3-always-creates-closure.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/2-closing-parameters",
          "files": [
            {
              "path": "/example-parent-and-own-values.js",
              "isExample": true
            },
            {
              "path": "/exercise-1.js"
            },
            {
              "path": "/exercise-2.js"
            },
            {
              "path": "/exercise-3.js"
            },
            {
              "path": "/exercise-4.js"
            }
          ]
        },
        {
          "path": "/3-closing-local",
          "files": [
            {
              "path": "/example-1-a-free-variable.js",
              "isExample": true
            },
            {
              "path": "/example-2-not-from-closure.js",
              "isExample": true
            },
            {
              "path": "/example-3-from-closure.js",
              "isExample": true
            },
            {
              "path": "/exercise-1.js"
            },
            {
              "path": "/exercise-2.js"
            }
          ]
        }
      ],
      "config": {
        "buttons": [
          {
            "console": true
          },
          {
            "debugger": true
          },
          {
            "jsTutor": true
          }
        ]
      }
    },
    {
      "path": "/01-event-loop",
      "dirs": [
        {
          "path": "/examples",
          "files": [
            {
              "path": "/0-labeled-logger.js"
            },
            {
              "path": "/1-set-timeout.js"
            },
            {
              "path": "/2-clear-timeout.js"
            },
            {
              "path": "/3-set-interval.js"
            },
            {
              "path": "/4-clear-interval.js"
            },
            {
              "path": "/5-zero-delays.js"
            },
            {
              "path": "/6-passing-arguments.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/exercise-1.js"
            },
            {
              "path": "/exercise-2.js"
            },
            {
              "path": "/exercise-3.js"
            },
            {
              "path": "/exercise-4.js"
            },
            {
              "path": "/exercise-5.js"
            }
          ]
        }
      ],
      "config": {
        "loopGuard": false,
        "clearScheduled": true
      }
    },
    {
      "path": "/02-sync-vs-async",
      "files": [
        {
          "path": "/readme.js"
        },
        {
          "path": "/01-synchronous-delays.js"
        },
        {
          "path": "/02-asynchronous-delays.js"
        },
        {
          "path": "/03-async-before-sync.js"
        },
        {
          "path": "/04-sync-before-async.js"
        },
        {
          "path": "/05-mixed-1.js"
        },
        {
          "path": "/06-mixed-2.js"
        },
        {
          "path": "/07-mixed-3.js"
        }
      ]
    },
    {
      "path": "/03-promises",
      "files": [
        {
          "path": "/readme.js"
        },
        {
          "path": "/01-new-promise.js"
        },
        {
          "path": "/02-pending-vs-settled.js"
        },
        {
          "path": "/03-dot-catch-consumer.js"
        },
        {
          "path": "/04-dot-then-consumer.js"
        },
        {
          "path": "/05-using-promises-1.js"
        },
        {
          "path": "/06-many-thens.js"
        },
        {
          "path": "/07-errors-in-thens.js"
        },
        {
          "path": "/08-using-promises-2.js"
        },
        {
          "path": "/09-using-promises-3.js"
        },
        {
          "path": "/10-return-promise-from-promises.js"
        }
      ],
      "config": {
        "loopGuard": false,
        "buttons": [
          {
            "console": true
          },
          {
            "debugger": true
          },
          {
            "promisees": true
          }
        ]
      }
    },
    {
      "path": "/04-fetch",
      "dirs": [
        {
          "path": "/examples",
          "files": [
            {
              "path": "/01-hello-world.js"
            },
            {
              "path": "/02-json-types.js"
            },
            {
              "path": "/03-dry-foods.js"
            },
            {
              "path": "/04-wavy-fungi.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/01-write-url.js"
            },
            {
              "path": "/02-write-url.js"
            },
            {
              "path": "/03-write-url.js"
            },
            {
              "path": "/04-pass-test.js"
            },
            {
              "path": "/05-pass-test.js"
            },
            {
              "path": "/06-pass-test.js"
            }
          ]
        }
      ],
      "files": [
        {
          "path": "/readme.js"
        }
      ]
    },
    {
      "path": "/05-fetch-rest",
      "dirs": [
        {
          "path": "/examples",
          "files": [
            {
              "path": "/01-resource-routes.js"
            },
            {
              "path": "/02-resource-id.js"
            },
            {
              "path": "/03-related-resources.js"
            },
            {
              "path": "/04-filter-with-params.js"
            },
            {
              "path": "/05-limit-number-of-results.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/exercise-1.js"
            },
            {
              "path": "/exercise-2.js"
            },
            {
              "path": "/exercise-3.js"
            },
            {
              "path": "/exercise-4.js"
            },
            {
              "path": "/exercise-5.js"
            },
            {
              "path": "/exercise-6.js"
            },
            {
              "path": "/exercise-7.js"
            },
            {
              "path": "/exercise-8.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/06-await-vs-then",
      "files": [
        {
          "path": "/00-promise-resolve-reject.js"
        },
        {
          "path": "/01-async-functions-are-still-functions.js"
        },
        {
          "path": "/02-async-functions-are-also-promises.js"
        },
        {
          "path": "/03-await-ing.js"
        },
        {
          "path": "/03-then-ing.js"
        },
        {
          "path": "/04-await-ing-a-promise.js"
        },
        {
          "path": "/04-then-ing-a-promise.js"
        },
        {
          "path": "/05-async-functions-return-promises.js"
        },
        {
          "path": "/06-await-return-promise.js"
        },
        {
          "path": "/06-then-return-promise.js"
        }
      ]
    },
    {
      "path": "/07-async-await-fetch",
      "dirs": [
        {
          "path": "/examples",
          "files": [
            {
              "path": "/00-multiple-fetches.js"
            },
            {
              "path": "/01-await-fetching-function.js"
            },
            {
              "path": "/01-then-fetching-function.js"
            },
            {
              "path": "/02-await-bad-response.js"
            },
            {
              "path": "/02-then-bad-response.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/1-basic-fetcher.js"
            },
            {
              "path": "/2-json-type-fetcher.js"
            },
            {
              "path": "/3-dry-food-fetcher.js"
            },
            {
              "path": "/4-wet-food-fetcher.js"
            },
            {
              "path": "/5-animal-fetcher.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/08-async-await-fetch-rest",
      "dirs": [
        {
          "path": "/examples",
          "files": [
            {
              "path": "/01-resource-routes.js"
            },
            {
              "path": "/02-resource-id.js"
            },
            {
              "path": "/03-related-resources.js"
            },
            {
              "path": "/04-filter-with-params.js"
            },
            {
              "path": "/05-limit-number-of-results.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/exercise-1.js"
            },
            {
              "path": "/exercise-2.js"
            },
            {
              "path": "/exercise-3.js"
            },
            {
              "path": "/exercise-4.js"
            },
            {
              "path": "/exercise-5.js"
            }
          ]
        }
      ]
    }
  ],
  "config": {
    "title": "asynchronous-programming/isolate",
    "path": "/",
    "loopGuard": false,
    "buttons": [
      {
        "console": true
      },
      {
        "debugger": true
      }
    ]
  }
}